# プロジェクトの基本設定(uvベース
# PEP 621に準拠したプロジェクトメタデータ
[project]
name = "python-project-sandbox"
version = "1.2.3"
description = "An experimental project to test out various tools."
authors = [
    {name = "7rikaz", email = "33836132+7rikazhexde@users.noreply.github.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "requests>=2.32.4",
    "dash>=3.1.0",
    "aiohttp>=3.12.13",
    "types-requests>=2.32.4.20250611",
    "dash-bootstrap-components>=2.0.3",
    "pytoniq-core>=0.1.43",
    "babel>=2.16.0",
    "httpx>=0.28.1",
    "python-dotenv>=1.1.1",
    "freezegun>=1.5.2",
    "tomlkit>=0.13.3",
    "types-pytz>=2025.2.0.20250516",
    "numpy>=2.2.5,<3.0.0",
    "pandas>=2.3.0",
]

# 開発用の追加依存関係
[project.optional-dependencies]
dev = [
    "pre-commit>=4.2.0",
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-xdist>=3.7.0",
    "pytest-html>=4.1.1",
    "pytest-mock>=3.14.1",
    "pytest-asyncio>=1.0.0",
    "pytest-testmon>=2.1.3",
    "shellcheck-py>=0.10.0.1",
    "ruff>=0.12.1",
]

# プロジェクトのURLリンク
[project.urls]
Homepage = "https://github.com/7rikazhexde/python-project-sandbox"
Repository = "https://github.com/7rikazhexde/python-project-sandbox.git"
Issues = "https://github.com/7rikazhexde/python-project-sandbox/issues"

# ビルドシステム設定（Poetry から Hatchling に変更）
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Hatchling設定（パッケージ構造の指定）
[tool.hatch.build.targets.wheel]
packages = ["project_a"]

# Taskipyタスク定義(justに移行)
#[tool.taskipy.tasks]
#testcoverageverbose = "pytest -s -vv --cov=. --cov-branch --cov-report term-missing --cov-report html"
#testhtmlreport = "pytest --html=htmlcov/report_page.html"
#testcixml = "python scripts/run_tests.py --report xml"
#testciterm = "python scripts/run_tests.py --report term"
#testtestmon = "pytest --testmon"
#testcoverage = "pytest --cov=. --cov-branch --cov-report=term-missing --cov-report=html"

# Ruffの設定
[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E402", "E501"]
per-file-ignores = {}

# Mypy設定
[tool.mypy]
files = ["project_a", "tests", "ci", "scripts"]
python_version = "3.11"
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true

[[tool.mypy.overrides]]
module = ["pytz.*"]
ignore_missing_imports = true

# Pytest設定
[tool.pytest.ini_options]
testpaths = ["project_a", "tests"]
pythonpath = ["."]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::pytest.PytestRemovedIn9Warning"
]

# カバレッジ設定
[tool.coverage.run]
source = ["project_a"]
omit = ["project_a/staking/ton_whales_staking_dashboard.py"]
branch = false

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
    "def main"
]

[tool.coverage.html]
directory = "htmlcov"
