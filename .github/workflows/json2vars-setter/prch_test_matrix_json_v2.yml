name: Test on PR by matrix.json (Except Dependabot)

on:
  pull_request:
    branches: "main"

jobs:
  generate_matrix:
    if: github.actor != 'dependabot[bot]' && !startsWith(github.event.pull_request.title, 'Bump version')
    runs-on: ubuntu-latest
    outputs:
      os: ${{ steps.set_outputs.outputs.os }}
      python_versions: ${{ steps.set_outputs.outputs.python_versions }}
      ghpages_branch: ${{ steps.set_outputs.outputs.ghpages_branch }}
      custom_custom_param: ${{ steps.set_outputs.outputs.custom_custom_param }}
      custom_custom_param_list: ${{ steps.set_outputs.outputs.custom_custom_param_list }}
      custom_custom_param_list_0: ${{ steps.set_outputs.outputs.custom_custom_param_list_0 }}
      custom_custom_nested_nested_key1: ${{ steps.set_outputs.outputs.custom_custom_nested_nested_key1 }}
      complex_list_1_details_time: ${{ steps.set_outputs.outputs.complex_list_1_details_time }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.1
        with:
          fetch-depth: 0

      - name: Set variables from JSON
        id: json2vars
        uses: ./.github/actions/json2vars-setter
        with:
          json-file: .github/workflows/matrix.json

      - name: Set outputs from environment variables
        id: set_outputs
        run: |
          echo "os=${OS}" >> $GITHUB_OUTPUT
          echo "python_versions=${PYTHON_VERSIONS}" >> $GITHUB_OUTPUT
          echo "ghpages_branch=${GHPAGES_BRANCH}" >> $GITHUB_OUTPUT
          echo "custom_custom_param=${CUSTOM_CUSTOM_PARAM}" >> $GITHUB_OUTPUT
          echo "custom_custom_param_list=${CUSTOM_CUSTOM_PARAM_LIST}" >> $GITHUB_OUTPUT
          echo "custom_custom_param_list_0=${CUSTOM_CUSTOM_PARAM_LIST_0}" >> $GITHUB_OUTPUT
          echo "custom_custom_nested_nested_key1=${CUSTOM_CUSTOM_NESTED_NESTED_KEY1}" >> $GITHUB_OUTPUT
          echo "complex_list_1_details_time=${COMPLEX_LIST_1_DETAILS_TIME}" >> $GITHUB_OUTPUT
        env:
          OS: ${{ env.OS }}
          PYTHON_VERSIONS: ${{ env.PYTHON_VERSIONS }}
          GHPAGES_BRANCH: ${{ env.GHPAGES_BRANCH }}
          CUSTOM_CUSTOM_PARAM: ${{ env.CUSTOM_CUSTOM_PARAM }}
          CUSTOM_CUSTOM_PARAM_LIST: ${{ env.CUSTOM_CUSTOM_PARAM_LIST }}
          CUSTOM_CUSTOM_PARAM_LIST_0: ${{ env.CUSTOM_CUSTOM_PARAM_LIST_0 }}
          CUSTOM_CUSTOM_NESTED_NESTED_KEY1: ${{ env.CUSTOM_CUSTOM_NESTED_NESTED_KEY1 }}
          COMPLEX_LIST_1_DETAILS_TIME: ${{ env.COMPLEX_LIST_1_DETAILS_TIME }}

      - name: Debug output values
        run: |
          echo "os: ${{ steps.set_outputs.outputs.os }}"
          echo "python_versions: ${{ steps.set_outputs.outputs.python_versions }}"
          echo "ghpages_branch: ${{ steps.set_outputs.outputs.ghpages_branch }}"
          echo "custom.custom_param: ${{ steps.set_outputs.outputs.custom_custom_param }}"
          echo "custom.custom_param_list: ${{ steps.set_outputs.outputs.custom_custom_param_list }}"
          echo "custom.custom_param_list[0]: ${{ steps.set_outputs.outputs.custom_custom_param_list_0 }}"
          echo "custom.custom_nested.nested_key1: ${{ steps.set_outputs.outputs.custom_custom_nested_nested_key1 }}"
          echo "complex_list[1].details.time: ${{ steps.set_outputs.outputs.complex_list_1_details_time }}"

  run_tests:
    needs: generate_matrix
    strategy:
      matrix:
        os: ${{ fromJson(needs.generate_matrix.outputs.os) }}
        python-version: ${{ fromJson(needs.generate_matrix.outputs.python_versions) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.1
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Tokyo"
          timezoneMacos: "Asia/Tokyo"
          timezoneWindows: "Tokyo Standard Time"

      - name: Install poetry
        run: |
          pip install poetry
          echo "Poetry version: $(poetry --version)"

      - name: Cache dependencies
        uses: actions/cache@v4.1.1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install
          echo "Installed dependencies:"
          poetry show --tree

      - name: Show matrix
        shell: bash
        run: |
          # リスト以外の場合
          ghpages_branch=${{ needs.generate_matrix.outputs.ghpages_branch }}
          custom_custom_param=${{ needs.generate_matrix.outputs.custom_custom_param }}
          custom_custom_param_list_0=${{ needs.generate_matrix.outputs.custom_custom_param_list_0 }}
          custom_custom_nested_nested_key1=${{ needs.generate_matrix.outputs.custom_custom_nested_nested_key1 }}
          complex_list_1_details_time=${{ needs.generate_matrix.outputs.complex_list_1_details_time }}

          # リストの場合は明示的に""で囲んで文字列化する。
          os='${{ needs.generate_matrix.outputs.os }}'
          python_versions='${{ needs.generate_matrix.outputs.python_versions }}'
          custom_custom_param_list='${{ needs.generate_matrix.outputs.custom_custom_param_list }}'

          echo "os: $os"
          echo "python_versions: $python_versions"
          echo "ghpages_branch: $ghpages_branch"
          echo "custom.custom_param: $custom_custom_param"
          echo "custom.custom_param_list: $custom_custom_param_list"
          echo "custom.custom_param_list[0]: $custom_custom_param_list_0"
          echo "custom.custom_nested.nested_key1: $custom_custom_nested_nested_key1"
          echo "complex_list[1].details.time: $complex_list_1_details_time"

      - name: Run pytest
        id: pytest
        shell: bash
        run: |
          output=$(poetry run pytest)
          echo "$output"
