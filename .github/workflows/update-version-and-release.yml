name: Version Update and Release

on:
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of version update'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  update-version-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.12'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Configure Git
        run: |
          git config --local user.email "33836132+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Get current version
        id: current_version
        run: echo "version=$(poetry version -s)" >> "$GITHUB_OUTPUT"

      - name: Update version
        id: update_version
        run: |
          poetry version ${{ github.event.inputs.update_type }}
          NEW_VERSION=$(poetry version -s)
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
          echo "Version updated from ${{ steps.current_version.outputs.version }} to $NEW_VERSION"

      - name: Commit and push changes
        run: |
          git add pyproject.toml
          git commit -m ":wrench: Bump version to ${{ steps.update_version.outputs.new_version }}"
          git push

      - name: Check if tag exists
        id: check_tag
        run: |
          TAG_NAME="v${{ steps.update_version.outputs.new_version }}"
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            git tag -d "$TAG_NAME"
            git push origin ":refs/tags/$TAG_NAME"
          fi
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"

      - name: Create and push new tag
        run: |
          git tag "v${{ steps.update_version.outputs.new_version }}"
          git push --tags

      - name: Generate changelog
        id: changelog
        run: |
          PREV_VERSION="v${{ steps.current_version.outputs.version }}"
          if git rev-parse "$PREV_VERSION" >/dev/null 2>&1; then
            changelog=$(git log --pretty=format:"- %s" "$PREV_VERSION"..HEAD)
          else
            changelog=$(git log --pretty=format:"- %s" -n 10)
          fi

          {
            echo "changelog<<EOF"
            echo "$changelog"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Create Release
        uses: softprops/action-gh-release@v2.0.9
        with:
          tag_name: v${{ steps.update_version.outputs.new_version }}
          name: python-project-sandbox-v${{ steps.update_version.outputs.new_version }}
          body: |
            ## Changes in this Release

            ${{ steps.changelog.outputs.changelog }}

            For full changes, see the [comparison view](${{ github.server_url }}/${{ github.repository }}/compare/v${{ steps.current_version.outputs.version }}..v${{ steps.update_version.outputs.new_version }})
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
