name: Version Update and Release

on:
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of version update'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  update-version-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.12'

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Configure Git
        run: |
          git config --local user.email "33836132+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Get current version
        id: current_version
        run: echo "version=$(poetry version -s)" >> "$GITHUB_OUTPUT"

      - name: Update version
        id: update_version
        run: |
          poetry version ${{ github.event.inputs.update_type }}
          echo "new_version=$(poetry version -s)" >> "$GITHUB_OUTPUT"

      - name: Create and switch to new branch
        run: |
          git checkout -b "update-version-${{ steps.update_version.outputs.new_version }}"

      - name: Commit changes
        run: |
          git add pyproject.toml
          git commit -m ":wrench: Bump version to ${{ steps.update_version.outputs.new_version }}"

      - name: Push changes to new branch
        run: |
          git push -u origin "update-version-${{ steps.update_version.outputs.new_version }}"

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "Bump version to ${{ steps.update_version.outputs.new_version }}" \
                       --body "This PR updates the version to ${{ steps.update_version.outputs.new_version }}." \
                       --base main \
                       --head "update-version-${{ steps.update_version.outputs.new_version }}"

      - name: Generate changelog
        id: changelog
        run: |
          changelog=$(git log --pretty=format:"- %s" v${{ steps.current_version.outputs.version }}..v${{ steps.update_version.outputs.new_version }})
          {
            echo "changelog<<EOF"
            echo "$changelog"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Create Release
        uses: softprops/action-gh-release@v2.0.9
        with:
          tag_name: v${{ steps.update_version.outputs.new_version }}
          name: python-project-sandbox-v${{ steps.update_version.outputs.new_version }}
          body: |
            ## Changes in this Release

            ${{ steps.changelog.outputs.changelog }}

            For full changes, see the [comparison view](${{ github.server_url }}/${{ github.repository }}/compare/v${{ steps.current_version.outputs.version }}..v${{ steps.update_version.outputs.new_version }})
          draft: false
          prerelease: false
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
