name: Dependabot PR Check

on:
  pull_request:
    branches:
      - main

jobs:
  set_variables:
    if: github.actor == 'dependabot[bot]' && !startsWith(github.event.pull_request.title, 'Bump version')
    runs-on: ubuntu-latest
    outputs:
      os: ${{ steps.json2vars.outputs.os }}
      versions_python: ${{ steps.json2vars.outputs.versions_python }}
      ghpages_branch: ${{ steps.json2vars.outputs.ghpages_branch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Set variables from JSON
        id: json2vars
        uses: 7rikazhexde/json2vars-setter@v1.0.1
        with:
          json-file: .github/json2vars-setter/matrix.json

  test:
    needs: set_variables
    strategy:
      matrix:
        os: ${{ fromJson(needs.set_variables.outputs.os) }}
        python-version: ${{ fromJson(needs.set_variables.outputs.versions_python) }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
          enable-cache: true

      - name: Update uv.lock (Ubuntu only)
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        shell: bash
        run: |
          uv sync --extra dev
          if ! git diff --quiet uv.lock; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add uv.lock
            git commit -m "Update uv.lock after dependency changes" || echo "No changes to commit"
          fi

      - name: Install dependencies
        shell: bash
        run: |
          uv sync --extra dev

      - name: Install just (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/.local/bin
            echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          else
            brew install just
          fi

      - name: Install just (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: choco install just

      - name: Run tests with coverage
        shell: bash
        run: |
          if command -v just >/dev/null 2>&1; then
            just testcov
          else
            uv run pytest --cov=project_a --cov-branch --cov-report=term-missing --cov-report=html --cov-report=xml project_a tests/
          fi

      - name: Generate required reports
        shell: bash
        run: |
          uv run coverage report > pytest-coverage.txt

          if [ ! -f "coverage.xml" ]; then
            uv run coverage xml
          fi

          if [ ! -f "pytest.xml" ]; then
            uv run pytest --junitxml=pytest.xml project_a tests/ --tb=no -q
          fi

      - name: Check coverage threshold (Warning only)
        shell: bash
        run: |
          COVERAGE=$(uv run coverage report --format=total)
          echo "Coverage: ${COVERAGE}%"
          if [ "${COVERAGE}" -lt 90 ]; then
            echo "::warning::Coverage ${COVERAGE}% is below 90% threshold (Dependabot - continuing)"
          fi

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@v1.1.54
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          pytest-xml-coverage-path: ./coverage.xml
          title: ü§ñ Dependabot Coverage Report (${{ matrix.os }} / Python ${{ matrix.python-version }})
          junitxml-path: ./pytest.xml
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependabot-coverage-reports-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            coverage.xml
            htmlcov/
            pytest.xml
            pytest-coverage.txt
          retention-days: 30

  check_all_tests:
    needs: test
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && !startsWith(github.event.pull_request.title, 'Bump version')
    steps:
      - name: Check test results
        if: contains(needs.test.result, 'failure')
        run: |
          echo "::error::Some tests failed in Dependabot PR. Manual review required."
          exit 1

      - name: All tests passed
        if: success()
        run: |
          echo "‚úÖ All tests passed for Dependabot dependency updates!"

  send_notification:
    needs: [test, check_all_tests]
    runs-on: ubuntu-latest
    if: always() && github.actor == 'dependabot[bot]' && !startsWith(github.event.pull_request.title, 'Bump version')
    steps:
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          if [ -z "$DISCORD_WEBHOOK_URL" ]; then
            echo "Discord webhook not configured, skipping notification"
            exit 0
          fi

          workflow_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          if [[ "${{ contains(needs.test.result, 'failure') }}" == "true" ]]; then
            status="FAILED ‚ùå"
            color=16711680
            description="Tests failed with dependency updates. Manual review required."
          elif [[ "${{ needs.check_all_tests.result }}" == "success" ]]; then
            status="SUCCESS ‚úÖ"
            color=65280
            description="All tests passed! Dependencies updated successfully."
          else
            status="CANCELLED ‚ö†Ô∏è"
            color=16776960
            description="Workflow was cancelled or skipped."
          fi

          message="## ü§ñ Dependabot PR Check Completed

          **Status:** ${status}
          **PR:** ${PR_TITLE}
          [View Details]($workflow_url)

          ${description}"

          json_payload=$(jq -n \
            --arg title "ü§ñ Dependabot Check - ${{ github.workflow }}" \
            --arg description "$message" \
            --argjson color "$color" \
            '{
              "embeds": [
                {
                  "title": $title,
                  "description": $description,
                  "color": $color
                }
              ]
            }')

          curl -X POST -H "Content-Type: application/json" \
            -d "$json_payload" \
            "$DISCORD_WEBHOOK_URL"
