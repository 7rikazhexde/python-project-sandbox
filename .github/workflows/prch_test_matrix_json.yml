name: Test on PR by matrix.json (Except Dependabot)

on:
  pull_request:
    branches: "main"

jobs:
  generate_matrix:
    if: github.actor != 'dependabot[bot]' && !startsWith(github.event.pull_request.title, 'Bump version')
    runs-on: ubuntu-latest
    outputs:
      os: ${{ steps.set-matrix.outputs.os }}
      python_versions: ${{ steps.set-matrix.outputs.python_versions }}
      ghpages_branch: ${{ steps.set-matrix.outputs.ghpages_branch}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.1
        with:
          fetch-depth: 0
      - name: Read matrix from JSON file
        id: set-matrix
        run: |
          # Use jq to extract the 'os' array and 'python_versions' from the JSON file in a compact format
          os=$(jq -c '.os' .github/workflows/matrix.json)
          python_versions=$(jq -c '.python_versions' .github/workflows/matrix.json)
          ghpages_branch=$(jq -c '.ghpages_branch' .github/workflows/matrix.json)

          # Print the 'os' and 'python_version' array to the logs for visibility
          echo "os: $os"
          echo "python_versions: $python_versions"
          echo "ghpages_branch: $ghpages_branch"

          # Set the 'python_versions' output variable for later jobs
          echo "os=$os" >> $GITHUB_OUTPUT
          echo "python_versions=$python_versions" >> $GITHUB_OUTPUT
          echo "ghpages_branch=$ghpages_branch" >> $GITHUB_OUTPUT

  run_tests:
    needs: generate_matrix
    strategy:
        matrix:
          os: ${{ fromJson(needs.generate_matrix.outputs.os) }}
          python-version: ${{ fromJson(needs.generate_matrix.outputs.python_versions) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.1
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Tokyo"
          timezoneMacos: "Asia/Tokyo"
          timezoneWindows: "Tokyo Standard Time"

      - name: Install poetry
        run: |
          pip install poetry
          echo "Poetry version: $(poetry --version)"

      - name: Cache dependencies
        uses: actions/cache@v4.1.1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install
          echo "Installed dependencies:"
          poetry show --tree

      - name: Run pytest
        id: pytest
        shell: bash
        run: |
          ghpage_branch=${{ needs.generate_matrix.outputs.ghpages_branch }}
          echo "$ghpage_branch"
          output=$(poetry run pytest)
          echo "$output"
